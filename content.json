{"meta":{"title":"亢子航的技术博客","subtitle":"","description":"","author":"亢子航","url":"http://kangzihang1109.github.io","root":"/"},"pages":[{"title":"分类","date":"2023-01-02T08:50:08.000Z","updated":"2023-01-02T08:51:10.550Z","comments":true,"path":"categories/index.html","permalink":"http://kangzihang1109.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-02T08:50:32.662Z","comments":true,"path":"tags/index.html","permalink":"http://kangzihang1109.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"JAVASE基础——判断和循环","slug":"JAVASE07","date":"2023-01-04T03:28:27.000Z","updated":"2023-01-04T15:14:18.760Z","comments":true,"path":"2023/01/04/JAVASE07/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/04/JAVASE07/","excerpt":"","text":"一、流程控制语句——顺序结构​ 没啥特别的就是程序按顺序执行 12345678public class Demo1 &#123; public static void main(String[] args) &#123; System.out.println(&quot;111111&quot;); System.out.println(&quot;222222&quot;); System.out.println(&quot;333333&quot;); &#125;&#125; 二、流程控制语句——分支结构if 12345678910111213import java.util.Scanner;public class Demo2&#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入女婿的酒量&quot;); int wine = sc.nextInt(); if (wine &gt; 2)&#123; System.out.println(&quot;小伙子不错呦&quot;); &#125; &#125;&#125; 2-1、对Boolean类型的值进行判断，建议直接把变量写在if的括号中，更清楚明白不易出错123456789public class Demo2&#123; public static void main(String[] args) &#123; boolean flag = true; if (flag)&#123; System.out.println(&quot;flag值为true&quot;); &#125; &#125;&#125; 2-2、练习1123456789// 需求：小明考第一就有女朋友public class Test1&#123; public static void main(String args[])&#123; int ranking = 1; if(ranking == 1)&#123; System.out.println(&quot;小红成为了小明的女朋友&quot;) &#125; &#125;&#125; 2-3、练习21234567891011121314151617// 需求：根据交通灯是否是绿灯来判断是否应该行驶public class Demo3 &#123; public static void main(String[] args) &#123; boolean isLightGreen = false; boolean isLightRed = false; boolean isLightYellow = true; if (isLightGreen)&#123; System.out.println(&quot;GoGoGo&quot;); &#125; if(isLightRed)&#123; System.out.println(&quot;stop!!!&quot;); &#125; if (isLightYellow) &#123; System.out.println(&quot;slow!!!&quot;); &#125; &#125;&#125; 2-4、if else2-4-1、练习112345678910111213141516import java.util.Scanner;public class Demo4 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请录入身上的钱&quot;); double money = sc.nextDouble(); if (money &gt;= 100)&#123; System.out.println(&quot;吃网红餐厅&quot;); &#125; else &#123; System.out.println(&quot;吃沙县小吃&quot;); &#125; &#125;&#125; 2-4-2、练习2123456789101112131415import java.util.Scanner;public class Demo5 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请录入实际付款钱数&quot;); double money = sc.nextDouble(); if (money &gt;= 600)&#123; System.out.println(&quot;付款成功&quot;); &#125; else &#123; System.out.println(&quot;付款失败&quot;); &#125; &#125;&#125; 2-4-3、练习3123456789101112131415161718192021import java.util.Scanner;public class Demo6 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入票号&quot;); int ticket = sc.nextInt(); if (ticket &gt; 1 &amp;&amp; ticket &lt;= 100)&#123; if (ticket % 2 == 0) &#123; System.out.println(&quot;坐右边&quot;); &#125; else &#123; System.out.println(&quot;坐左边&quot;); &#125; &#125; else &#123; System.out.println(&quot;票号异常&quot;); &#125; &#125;&#125; 2-5、if else if2-5-1、练习11234567891011121314151617181920212223import java.util.Scanner;public class Demo7 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入一个整数表示小明的成绩&quot;); int score = sc.nextInt(); if (score &gt;= 0 &amp;&amp; score &lt;= 100)&#123; // 添加一个数据合法判断条件 if (score &gt;= 95 &amp;&amp; score &lt;= 100)&#123; System.out.println(&quot;送自行车一辆&quot;); &#125; else if (score &gt;= 90 &amp;&amp; score &lt;= 94) &#123; System.out.println(&quot;去游乐场玩一天&quot;); &#125; else if (score &gt;= 80 &amp;&amp; score &lt;= 89) &#123; System.out.println(&quot;送变形金刚一个&quot;); &#125; else if (score &lt; 80)&#123; System.out.println(&quot;打你一顿&quot;); &#125; &#125; else &#123; System.out.println(&quot;数据异常&quot;); &#125; &#125;&#125; 2-5-2、练习212345678910111213141516171819import java.util.Scanner;public class Demo8 &#123; public static void main(String[] args) &#123; int price = 1000; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入会员级别&quot;); int level = sc.nextInt(); if (level == 1)&#123; System.out.println(&quot;价格为&quot;+price * 0.9); &#125; else if (level == 2) &#123; System.out.println(&quot;价格为&quot; + price * 0.8); &#125; else if (level == 3) &#123; System.out.println(&quot;价格为&quot; + price * 0.7); &#125; else &#123; System.out.println(&quot;非会员原价1000&quot;); &#125; &#125;&#125; 三、分支语句——switch123456789101112131415161718192021// 根据输入的值决定吃哪一种面import java.util.Scanner;public class Demo9 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); String noodles = sc.nextLine(); switch (noodles)&#123; case &quot;兰州拉面&quot;: System.out.println(&quot;吃兰州拉面&quot;); case &quot;武汉热干面&quot;: System.out.println(&quot;吃武汉热干面&quot;); case &quot;北京炸酱面&quot;: System.out.println(&quot;北京炸酱面&quot;); case &quot;陕西油泼面&quot;: System.out.println(&quot;陕西油泼面&quot;); default: System.out.println(&quot;啥都没有吃泡面吧&quot;); &#125; &#125;&#125; 3-1、练习1123456789101112131415161718192021222324252627282930313233343536import java.util.Scanner;public class Demo10 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请录入星期&quot;); int week = sc.nextInt(); switch (week)&#123; case 1: System.out.println(&quot;今天去跑步&quot;); break; case 2: System.out.println(&quot;今天去游泳&quot;); break; case 3: System.out.println(&quot;今天去慢走&quot;); break; case 4: System.out.println(&quot;今天去动感单车&quot;); break; case 5: System.out.println(&quot;今天去拳击&quot;); break; case 6: System.out.println(&quot;今天去爬山&quot;); break; case 7: System.out.println(&quot;今天去好好吃一顿&quot;); break; default: System.out.println(&quot;数据异常&quot;); break; &#125; &#125;&#125; 3-2、default的位置和省略​ （1）位置：default不一定是写在最下面的，我们可以写在任意位置，只不过习惯会写在最下面 ​ （2）省略：default可以省略，语法不会有问题，但是不建议省略 3-3、case穿透​ 语句体当中没有写break导致的，switch首先会拿着小括号中的表达式跟下面的每一个case进行匹配，如果发现break，就会执行相应的语句体，如果没有发现break，那么程序会继续执行下一个case的语句体，一直到遇到break或者大括号为止。 3-4、switch的新特性（JDK12及以上）1234567891011121314151617181920public class Demo11 &#123; public static void main(String[] args) &#123; int number = 1; switch (number)&#123; case 1 -&gt; &#123; System.out.println(&quot;一&quot;); &#125; // case 1 -&gt; System.out.println(&quot;一&quot;); case 2 -&gt; &#123; System.out.println(&quot;二&quot;); &#125; case 3 -&gt; &#123; System.out.println(&quot;三&quot;); &#125; default -&gt; &#123; System.out.println(&quot;没有这种选项&quot;); &#125; &#125; &#125;&#125; 3-5、练习21234567891011121314151617import java.util.Scanner;public class Demo12 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请录入一个整数表示星期&quot;); int week = sc.nextInt(); switch (week)&#123; case 1,2,3,4,5: System.out.println(&quot;工作日&quot;); break; case 6,7: System.out.println(&quot;休息日&quot;); break; &#125; &#125;&#125; 3-6、练习3123456789101112131415161718192021222324252627import java.util.Scanner;public class Demo13 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入您的选择&quot;); int choose = sc.nextInt(); switch (choose)&#123; case 1: System.out.println(&quot;机票查询&quot;); break; case 2: System.out.println(&quot;机票预定&quot;); break; case 3: System.out.println(&quot;机票改签&quot;); break; case 4: System.out.println(&quot;退出服务&quot;); break; default: System.out.println(&quot;退出服务&quot;); break; &#125; &#125;&#125; 四、for循环4-1、需要注意的点（1）初始化语句只执行一次 （2）判断语句为true，循环继续 （3）判断语句为false，循环结束 4-2、练习1:输出五次HelloWorld123456789public class Demo14 &#123; public static void main(String[] args) &#123; int i = 0; for(i=0;i&lt;=4;i++)&#123; System.out.println(&quot;HelloWorld&quot;); &#125; &#125;&#125; 4-3、练习2：输出数字12345678// 输出12345public class Demo15 &#123; public static void main(String[] args) &#123; for (int j = 1; j &lt;= 5; j++) &#123; System.out.println(j); &#125; &#125;&#125; 123456789// 输出54321public class Demo15 &#123; public static void main(String[] args) &#123; for (int j = 5; j &gt;= 1; j--) &#123; System.out.println(j); &#125; &#125;&#125; 4-4、练习31234567public class Demo16 &#123; public static void main(String[] args) &#123; for (int i = 1; i &lt;= 5 ; i++) &#123; System.out.println(&quot;第&quot;+i+&quot;断线重链中&quot;); &#125; &#125;&#125; 4-5、练习4123456789public class Demo17 &#123; public static void main(String[] args) &#123; int sum = 0; for (int i = 1; i &lt;= 5 ; i++) &#123; sum += i; &#125; System.out.println(&quot;1-5和为&quot;+sum); &#125;&#125; 4-6、练习5123456789101112public class Demo18 &#123; public static void main(String[] args) &#123; int sum = 0; for (int i = 1; i &lt;= 100 ; i++) &#123; if (i % 2 == 0)&#123; sum += i; &#125; &#125; System.out.println(sum); &#125;&#125; 4-7、练习61234567891011121314151617181920import java.util.Scanner;public class Demo19 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); int start,end; int count = 0; System.out.println(&quot;请输入开始值&quot;); start = sc.nextInt(); System.out.println(&quot;请输入结束值&quot;); end = sc.nextInt(); for (int i = start; i &lt;= end ; i++) &#123; if (i % 3 == 0 &amp;&amp; i % 5 == 0)&#123; count++; &#125; &#125; System.out.println(&quot;一共有&quot;+count+&quot;个&quot;); &#125;&#125; 五、while循环1234567891011// 循环打印1-100public class Demo20 &#123; public static void main(String[] args) &#123; int i = 1; while(i &lt;= 100)&#123; System.out.println(i); i++; &#125; &#125;&#125; 5-1、while和for的区别for循环中，一般都知道循环次数或者循环范围 while循环中，一般只知道循环的条件 5-2、练习1 1234567891011public class Demo21 &#123; public static void main(String[] args) &#123; double paper = 0.1; int count = 0; while(paper &lt;= 8844430)&#123; paper *= 2; count++; &#125; System.out.println(&quot;一共折了&quot;+count+&quot;次&quot;); &#125;&#125; 5-3、练习212345678910111213141516171819import java.util.Scanner;public class Demo22 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入一个值&quot;); int x = sc.nextInt(); int temp = x; int num = 0; while (x != 0)&#123; int ge = x % 10; x = x / 10; num = num * 10 + ge; &#125; System.out.println(num); System.out.println(num == temp); &#125;&#125; 5-4、练习3123456789101112131415161718import java.util.Scanner;public class Demo23 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入被除数&quot;); int a = sc.nextInt(); System.out.println(&quot;请输入除数&quot;); int b = sc.nextInt(); int count = 0; while(a - b &gt;= 0)&#123; a = a - b; count++; &#125; System.out.println(&quot;余数为&quot;+a); System.out.println(&quot;商为&quot;+count); &#125;&#125; 六、do while循环（先执行一次，后判断）七、无限循环八、跳转控制语句continue12345678910public class Demo2 &#123; public static void main(String[] args) &#123; for (int i = 1; i &lt;= 5 ; i++) &#123; if (i == 3)&#123; continue; &#125; System.out.println(&quot;小老虎再吃第&quot; + i + &quot;个包子&quot;); &#125; &#125;&#125; 123456789101112public class Demo2 &#123; public static void main(String[] args) &#123; for (int i = 1; i &lt;= 5 ; i++) &#123; System.out.println(&quot;小老虎再吃第&quot; + i + &quot;个包子&quot;); if (i == 3)&#123; break; &#125; &#125; System.out.println(&quot;小老虎吃饱了&quot;); &#125;&#125; 8-1、练习1 12345678910public class Demo3 &#123; public static void main(String[] args) &#123; for (int i = 1; i &lt;= 100 ; i++) &#123; if (i % 7 == 0 || i % 10 == 7 || i / 10 == 7 )&#123; System.out.println(i + &quot;逢7过&quot;); &#125; &#125; &#125;&#125; 8-2、练习2 1234567891011121314151617public class Demo4 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入一个数&quot;); int number = sc.nextInt(); for (int i = 2; i &lt;= number ; i++) &#123; if (number % i == 0 &amp;&amp; number != 2)&#123; System.out.println(&quot;不是质数&quot;); break; &#125; else &#123; System.out.println(&quot;是质数&quot;); break; &#125; &#125; &#125;&#125; 8-3、练习3（Random类） 12345678910111213141516171819// 三次猜错自动触发保底，公布答案public class Demo5 &#123; public static void main(String[] args) &#123; Random r = new Random(); int number = r.nextInt(101); Scanner sc = new Scanner(System.in); for (int i = 1; i &lt;= 3 ; i++) &#123; System.out.println(&quot;请输入你猜的值&quot;); int your_number = sc.nextInt(); if (your_number == number) &#123; System.out.println(&quot;猜对了&quot;); &#125; else &#123; System.out.println(&quot;猜错了&quot;); &#125; &#125; System.out.println(&quot;触发保底答案是&quot; + number); &#125;&#125; 8-4、练习4（Math类中的sqrt方法）12345678910111213import java.util.Scanner;public class Demo6 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入要判断的值&quot;); int x = sc.nextInt(); double a = Math.sqrt(x); int b = (int)a; System.out.println(x + &quot;平方根的整数部分是&quot; + b); &#125;&#125;","categories":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/categories/JAVASE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/tags/JAVASE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVASE基础——三元运算符、原码，反码，补码","slug":"JAVASE06","date":"2023-01-03T03:28:27.000Z","updated":"2023-01-04T03:05:21.531Z","comments":true,"path":"2023/01/03/JAVASE06/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/03/JAVASE06/","excerpt":"","text":"一、 三元运算符关系表达式 ? 表达式1 : 表达式2 ； 123456789// 三元运算符求较大值public class Demo13 &#123; public static void main(String[] args) &#123; int number1 = 10; int number2 = 20; int result = number1 &gt; number2 ? number1 : number2; System.out.println(result); &#125;&#125; 练习：两只老虎12345678910111213import java.util.Scanner;public class Demo14 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入第一个老虎的体重&quot;); int weight1 = sc.nextInt(); System.out.println(&quot;请输入第二个老虎的体重&quot;); int weight2 = sc.nextInt(); String result = weight1 == weight2 ? &quot;相同&quot; : &quot;不同&quot;; System.out.println(result); &#125;&#125; 练习：三个和尚1234567891011public class Demo15 &#123; public static void main(String[] args) &#123; int height1 = 150; int height2 = 210; int height3 = 165; int temp = height1 &gt; height2 ? height1 : height2; // 临时变量temp int max = temp &gt; height3 ? temp : height3; System.out.println(max); &#125;&#125; 二、原码反码补码（正数的原反补都是它本身，计算机中的数据运算全部是以补码形式进行的）1、原码： 十进制数据的二进制表现形式，最左边是符号位，0为正，1为负 如：00000111​ （1）1byte的最大值：01111111（一位数代表1bit，8bit代表1byte） ​ （2）原码的弊端：如果是负数运算，结果就出错，实际运算的结果，跟我们预期的结果相反 2、反码： 正数的反码是是其本身，负数反码是符号位保持不变，其余位置取反（为了解决原码不能计算负数的问题出现的，原码进行负数计算，实际运算的结果和我们预期的结果相反），但是反码结果不能超0运算，否则会出错。因为0在反码中有两种形式，00000000和11111111分别为正0和负0，计算时候会出错。​ 反码计算相当于把数轴反过来，如下图所示 3、补码： 正数的补码是其本身，负数的补码是其反码的基础上+1​ 负数原码，反码，补码关系如图所示 4、特殊值-128​ 由于少一个0空出来一个位置，补码可以多记录一个值-128，没有原码，反码，只有补码，但是因为计算机中数值计算全部是以补码进行，所以不受影响。 三、实际应用中的补码1、基本数据类型和补码2、 隐式转换和补码1234567public class test &#123; public static void main(String[] args) &#123; byte a = 10; // 0000 1010 int b = a; // 0000 0000 0000 0000 0000 0000 0000 1010 System.out.println(b); &#125;&#125; 3、强制转换和补码12345678public class test &#123; public static void main(String[] args) &#123; int a = 300; // 0000 0000 0000 0000 0000 0001 0010 1100 byte b = (byte)a; // 0010 1100 (去掉前面的0) System.out.println(b); &#125;&#125; 4、其他的运算符与补码4-1、 &amp; 逻辑与(计算数字的&amp;，没有短路)1234567public class test &#123; public static void main(String[] args) &#123; int a = 200; // 0000 0000 0000 0000 0000 0000 1100 1000 int b = 10; // 0000 0000 0000 0000 0000 0000 0000 1010 System.out.println(a &amp; b); &#125;&#125; 4-2、 | 逻辑或(计算数字的|，没有短路)1234567public class test &#123; public static void main(String[] args) &#123; int a = 200; // 0000 0000 0000 0000 0000 0000 1100 1000 int b = 10; // 0000 0000 0000 0000 0000 0000 0000 1010 System.out.println(a | b); &#125;&#125; 4-3、&lt;&lt; 左移(左移几次次就是乘2的几次方) 1234567public class test &#123; public static void main(String[] args) &#123; int a = 200; // 0000 0000 0000 0000 0000 0000 1100 1000 int b = 10; // 0000 0000 0000 0000 0000 0000 0000 1010 System.out.println(a &lt;&lt; 2); &#125;&#125; 4-3、&gt;&gt;右移(右移几次就是除2的几次方)123456public class test &#123; public static void main(String[] args) &#123; int a = 200; // 0000 0000 0000 0000 0000 0000 1100 1000 System.out.println(a &gt;&gt; 2); &#125;&#125; 4-4、无符号右移（同右移，唯一区别是全补0）","categories":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/categories/JAVASE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/tags/JAVASE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVASE基础——计算机的存储规则","slug":"JAVASE02","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-04T03:06:17.245Z","comments":true,"path":"2023/01/02/JAVASE02/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE02/","excerpt":"","text":"一、计算机的存储规则1、三类数据​ 文本、图片、声音 2、在计算机中一切数据都是以二进制的形式来存储的什么是二进制​ 十进制：0123456789 逢十进一，借一当十 ​ 二进制：01 逢二进一，借一当二 ​ 十进制中的0——–&gt;二进制中的0 ​ 十进制中的1——–&gt;二进制中的1 ​ 十进制中的2——–&gt;二进制中的10 ​ 十进制中的3——–&gt;二进制中的11 ​ 十进制中的4——–&gt;二进制中的100 3、Java中的进制规定（JDK7及以后的特性）​ 二进制代码中以0b开头 ​ 十进制代码不加任何前缀 ​ 八进制代码中以0开头 ​ 十六进制代码中以0x开头 4、计算机为什么使用二进制？​ （1）、技术实现简单：计算机是由逻辑电路组成，逻辑电路通常只有两个状态，开关的接通与断开，这两种状态正好可以用“1”和“0”表示。 ​ （2）、抗干扰能力强，可靠性高：二进制中只使用0和1两个数字，传输和处理时不易出错，因而可以保障计算机具有很高 的可靠性。 ​ （3）、运算规则简单：与十进制数相比，二进制数的运算规则要简单得多，这不仅可以使运算器的结构得到简化，而且有 利于提高运算速度。 ​ （4）、适合逻辑运算：逻辑代数是逻辑运算的理论依据，二进制只有两个数码，正好与逻辑代数中的“真”和“假”相吻合。 ​ （5）、易于进行转换：二进制数与十进制数之间的转换相当容易。人们使用计算机时可以仍然使用自己所习惯的十进制数， 而计算机将其自动转换成二进制数存储和处理，输出处理结果时又将二进制数自动转换成十进制数，这给工作带来极大的方便。 5、计算机中的文本数据存储（数字转二进制，字母和汉字查询码表）6、计算机中的图片数据存储（通过每个像素点中的RGB三原色来存储）​ 图片数据分为：黑白图，灰度图，彩色图 ​ 分辨率，像素，三原色 （1）黑白图（2）灰度图(3）彩色图片​ 计算机每个像素点都是由红绿蓝组成的，每个像素点将三原色设置为不同的值，从而产生不同的颜色，生产彩色图 总结​ 1.计算机中的颜色都是采用光学三原色 ​ 2.分别为：红绿蓝。也称为RGB。 ​ 3.可以写成十进制形式。（255，255，255） ​ 4.也可以写成十六进制形式（FFFFFF） 7、计算机中声音数据的存储（对声音波形进行采样再存储）下测采样点会尽可能去还原声音（红线），越密集越接近原本的声音","categories":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/categories/JAVASE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/tags/JAVASE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVASE基础——CMD，JDK，关键字，字面量，特殊字符，变量","slug":"JAVASE01","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-04T03:06:27.568Z","comments":true,"path":"2023/01/02/JAVASE01/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE01/","excerpt":"","text":"一、常用CMD命令 盘符切换：盘符名称+冒号 E: 查看当前路径下的内容 dir 进入单集目录 ： cd 目录 退回上一级目录 ： cd.. 进入多集目录 cd 目录1\\目录2 回退到盘符目录 cd\\ 清屏 cls 退出命令提示符窗口 exit 二、JDK和JRE1、JDK：Java开发工具包​ JVM，核心类库，开发工具 2、JRE：JAVA运行环境​ JVM，核心类库，运行工具 3、JVM：Java虚拟机​ JAVA程序真正运行的地方 4、JDK包含JRE，JRE包含JVM三、关键字：被JAVA赋予特殊意义的单词1、关键字字母全部小写2、IDE中一般对于关键字有特殊标注（高亮显示）四、关键字class​ class：用于定义创建一个类，类是JAVA最基本的组成单元 1234/*定义一个名叫HelloWorld的类*/public class HelloWorld&#123; &#125; 五、字面量1、整数类型（不带小数点的数字）​ 666，-88 2、小数类型（带小数点的数字）​ 13.14，-5.21 3、字符串类型（双引号括起来的内容）​ “HelloWorld” 4、字符类型（单引号引起来的内容，内容只能有一个）​ ‘A’ , ‘0’ 5、布尔类型（布尔值，只有两个值 true或者 false）6、空类型（一个特殊的值，空值, 不能直接打印）​ 值是null 六、特殊字符1、\\t制表符（在打印的时候，把前面的字符串的长度补齐到8，或者8的整数倍。最少补1个空格，最多补8个空格）​ 作用：缩进、对齐、大空格 123456public class HelloWorld&#123; public static void main(String[] args)&#123; System.out.println(&quot;name&quot;+&#x27;\\t&#x27;+&quot;age&quot;); System.out.println(&quot;tom&quot;&#x27;\\t&#x27;+&quot;23&quot;); &#125;&#125; 七、变量1、变量的定义格式​ 数据类型 变量名 &#x3D; 数据值; ​ 数据类型：为空间中存储的数据，加入类型限制 ​ 变量名：为这个空间起个名字 ​ 数据值：存在空间里面的数值 123456public class ValueDemo&#123; public static void main(String[] args)&#123; int a = 10; System.out.println(a); &#125;&#125; 2、变量的使用方式1234567891011121314151617181920212223public class ValueDemo&#123; public static void main(String[] args)&#123; //1.基本用法：定义变量，再进行输出 int a = 10; System.out.println(a);//10 //2.变量参与计算 int b = 30; int c = 20; System.out.println(b+c);//50 //3.修改变量记录的值 a = 50; System.out.println(a);//50 //注意事项 //1.只能存一个值 //2.变量名不允许重复定义 //3.一条语句可以定义多个变量 int d = 100,e = 200,f = 300;//定义三个变量d，e，f System.out.println(d); System.out.println(e); System.out.println(f); //变量使用前必须要赋值 &#125;&#125; ## 3、变量使用方式练习(公交车上下乘客) 123456789101112131415161718public class ValueDemo&#123; public static void main(String[] args)&#123; //一开始没有乘客 int count = 0; //第一站：上了一位乘客（在原有的基础上+1） count = count + 1; //第二站：上了两位乘客，下了一位乘客 count = count + 2 - 1; //第三站：上了两位乘客，下了一位乘客 count = count + 2 - 1; //第四站：下了一位乘客 count = count - 1; //第五站：上去一位乘客 count = count + 1; // 输出到了终点车上一共有多少乘客 System.out.println(count); &#125;&#125;","categories":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/categories/JAVASE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/tags/JAVASE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVASE基础——运算符，表达式，算数运算符，数据类型的转换，“+”运算的三种操作","slug":"JAVASE04","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-04T03:05:53.362Z","comments":true,"path":"2023/01/02/JAVASE04/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE04/","excerpt":"","text":"一、运算符​ 对字面量或变量进行操作的符号 二、表达式​ 用运算符把字面量或者变量连接起来，符合Java语法的式子就可以叫做表达式（如：a+b，a+b是表达式，+是运算符） 三、算数运算符​ +，-，*，&#x2F;，%，加减乘除和取余 代码练习（+，-，*）123456789101112131415public class Demo1 &#123; public static void main(String[] args) &#123; System.out.println(3 + 2); System.out.println(5 - 1); System.out.println(7 * 9); // 如果计算的时候有小数参与 // 结论：在代码中有小数参与计算，结果有可能不精确 System.out.println(1.1 + 1.1); System.out.println(1.1 + 1.01); System.out.println(1.1 - 1.01); System.out.println(1.1 * 1.01); &#125;&#125; 结果代码练习（&#x2F;,%）1234567891011121314public class Demo2 &#123; public static void main(String[] args) &#123; //整数参与计算，结果只能是整数 //小数参与计算，结果可能是不精确的 //除法 System.out.println(10 / 2); System.out.println(10 / 3); System.out.println(10.0 / 3); //取模：取余 System.out.println(10 % 2); System.out.println(10 % 3); &#125;&#125; 结果练习：数值拆分​ 键盘录入三位数，拆分它的个位，十位和百位 123456789101112131415import java.util.Scanner;public class Demo3 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入整数&quot;); int number = sc.nextInt(); int x = number / 100 ; int y = number / 10 % 10 ; int z = number % 10 ; System.out.println(x); System.out.println(y); System.out.println(z); &#125;&#125; 结果四、数据类型的转换隐式转换（自动类型提升 byte&lt;short&lt;int&lt;long&lt;float&lt;double）​ 1、把取值范围小的数据，转换为取值范围大的数据（精度更高），然后再进行计算 ​ 2、byte，short，char，三种类型数据，会先提升为int，再进行运算 隐式转换练习强制转换​ 当把范围大的值，赋值给范围小的变量的时候，不允许直接赋值，需要加入强制转换 12int a = 300;byte b = (byte) a; 练习12345678910public class Demo4 &#123; public static void main(String[] args) &#123; byte b1 = 100; byte b2 = 100; //(byte)b1+b2;强转的是b1，错误 byte result = (byte) (b1 + b2); System.out.println(result);//结果不是200，因为转换的数据过大 &#125;&#125; 结果五、“+”三种操作1、数值相加2、字符串相加​ （1）、当“+”操作中出现字符串时候，这个+是字符串的连接符，而不是算数运算符了。会将前后的数据进行拼接，并产生一个新的字符串 ​ “123”+123——–&gt;”123123” ​ （2）、连续+操作时候，从左到右逐个执行 ​ 1+99+“123”———-&gt;100123 ​ 1+2+”abc”+2+1———-&gt;3abc21 3、字符相加​ byte，short，char类型的数据在运算的时候，会先升为int，然后再进行计算，通过ASCII表查询到对应的数字进行相加","categories":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/categories/JAVASE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/tags/JAVASE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVASE基础——基本数据类型，标识符，Scanner键盘录入","slug":"JAVASE03","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-04T03:06:05.206Z","comments":true,"path":"2023/01/02/JAVASE03/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE03/","excerpt":"","text":"一、基本数据类型 12345678910111213141516171819202122public class ValueDemo&#123; public static void main(String[] args)&#123; byte b = 10; System.out.println(b);//10 short s = 20; System.out.println(s);//20 int i = 30; System.out.println(i);//30 //定义long类型的变量，在数值后面需要加个L作为后缀 long n = 9999999L; System.out.println(n); //定义float类型的变量，在数值后面需要加个F作为后缀 float f = 10.1F; System.out.println(f);//10.1 double d = 20.2; System.out.println(d);//20.2 char c = &#x27;中&#x27; System.out.println(c);//中 boolean o = true; System.out.println(o);//true &#125;&#125; 练习：输出老师信息1234567891011121314public class ValueDemo&#123; public static void main(String[] args)&#123; String name = &quot;kzh&quot;; int age - 18; char gender = &#x27;男&#x27;; double height = 180.1; boolean flag = true; System.out.println(name); System.out.println(age); System.out.println(gender); System.out.println(height); System.out.println(flag); &#125;&#125; 二、标识符1、什么是标识符​ 标识符就是给类，方法，变量起的名字 2、起名规则（阿里巴巴编码规范）​ （1）有数字，字母，下划线和美元（$）组成 ​ （2）不能以数字开头 ​ （3）不能和关键字同名 ​ （4）区分大小写 3、命名规则（见名知意）​ （1）小驼峰：方法，变量 ​ name、firstName ​ （2）大驼峰：类名 ​ Student、GoodStudent 三、键盘录入（Scanner类）​ 步骤1：导包 1import java.util.Scanner; ​ 步骤2：创建对象 1Scanner sc = new Scanner(System.in); ​ 步骤3：接受数据 1int i = sc.nextInt(); 1、实际操作123456789import java.util.Scanner;public class ValueDemo&#123; public static void main(String[] args)&#123; System.out.println(&quot;请输入整数&quot;); Scanner sc = new Scanner(System.in); int i = sc.nextInt(); System.out.println(i); &#125;&#125;","categories":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/categories/JAVASE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/tags/JAVASE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVASE基础——自增自减运算符，赋值运算符、关系运算符、逻辑运算符、短路逻辑运算符","slug":"JAVASE05","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-04T03:05:40.123Z","comments":true,"path":"2023/01/02/JAVASE05/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE05/","excerpt":"","text":"一、自增自减运算符1、基本用法​ ++变量值加1 ​ –变量值减一 12345678910public class Demo5 &#123; public static void main(String[] args) &#123; int x = 10; int y = x++;// 先用再++ int z = ++x;// 先++再用 System.out.println(&quot;x:&quot; + x); System.out.println(&quot;y:&quot; + y); System.out.println(&quot;z:&quot; + z); &#125;&#125; 二、赋值运算符1234567891011public class Demo6 &#123; public static void main(String[] args) &#123; int a = 10; int b = 20; a += b; // 隐藏了一个强制转换 // 等同于 a = (int)(a+b); System.out.println(a); System.out.println(b); &#125;&#125; 三、关系运算符​ 关系运算符的结果都为boolean类型，要么是true，要么是false 12345678910public class Demo7 &#123; public static void main(String[] args) &#123; int a = 10; int b = 10; int c = 20; System.out.println(a == b); System.out.println(a == c); &#125;&#125; 练习：约会12345678910111213141516import java.util.Scanner;public class Demo8 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入衣服的时髦度&quot;); int myFashion = sc.nextInt(); //myFashion 为自己衣服的时髦程度 System.out.println(&quot;请输入对方的衣服时髦度&quot;); int girlFashion = sc.nextInt(); //girlFashion 为对方的时髦程度 boolean result = myFashion &gt; girlFashion; System.out.println(result); &#125;&#125; 四、逻辑运算符1234567891011121314151617181920212223public class Demo9 &#123; public static void main(String[] args) &#123; // &amp; 并且 System.out.println(true &amp; true); System.out.println(false &amp; false); System.out.println(true &amp; false); System.out.println(false &amp; true); // | 或者 System.out.println(true | true); System.out.println(true | false); System.out.println(false | false); System.out.println(false | true); // ^ 异或 System.out.println(true ^ true); System.out.println(false ^ true); System.out.println(false ^ false); System.out.println(false ^ true); // ! 非 System.out.println(!false); System.out.println(!true); &#125;&#125; 五、短路逻辑运算符（效率更高）1234567891011121314public class Demo10 &#123; public static void main(String[] args) &#123; // &amp;&amp;短路与 System.out.println(true &amp;&amp; true); System.out.println(false &amp;&amp; false); System.out.println(true &amp;&amp; false); System.out.println(false &amp;&amp; true); // ||短路或 System.out.println(true || true); System.out.println(false || false); System.out.println(true || false); System.out.println(false || true); &#125;&#125; ​ 当左边的表达式已经可以确定结果，右边就不会运行了 练习123456789101112public class Demo11 &#123; public static void main(String[] args) &#123; int a = 10; int b = 10; boolean result = ++a &lt; 5 &amp;&amp; ++b &lt; 5; // ++a &lt; 5 已经短路了，后面++b，不会运行 System.out.println(result); System.out.println(a);// 11 System.out.println(b);// 10 &#125;&#125; 注：&amp;|无论左边是true还是false，右边都要执行 ​ &amp;&amp;：左边为false，右边无论真假，整个表达式一定是false ​ ||：左边为true，右边无论真假，整个表达式一定是true 练习：数字61234567891011121314import java.util.Scanner;public class Demo12 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入第一个整数&quot;); int number1 = sc.nextInt(); System.out.println(&quot;请输入第二个整数&quot;); int number2 = sc.nextInt(); boolean result = number1 == 6 || number2 == 6 || (number1 + number2) % 6 == 0; System.out.println(result); &#125;&#125;","categories":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/categories/JAVASE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/tags/JAVASE%E5%9F%BA%E7%A1%80/"}]}],"categories":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/categories/JAVASE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVASE基础","slug":"JAVASE基础","permalink":"http://kangzihang1109.github.io/tags/JAVASE%E5%9F%BA%E7%A1%80/"}]}