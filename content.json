{"meta":{"title":"亢子航的技术博客","subtitle":"","description":"","author":"亢子航","url":"http://kangzihang1109.github.io","root":"/"},"pages":[{"title":"分类","date":"2023-01-02T08:50:08.000Z","updated":"2023-01-02T08:51:10.550Z","comments":true,"path":"categories/index.html","permalink":"http://kangzihang1109.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-02T08:50:32.662Z","comments":true,"path":"tags/index.html","permalink":"http://kangzihang1109.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"JAVASE05","date":"2023-01-02T11:41:24.459Z","updated":"2023-01-02T11:40:41.669Z","comments":true,"path":"2023/01/02/JAVASE05/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE05/","excerpt":"","text":"一、自增自减运算符1、基本用法​ ++变量值加1 ​ –变量值减一 12345678910public class Demo5 &#123; public static void main(String[] args) &#123; int x = 10; int y = x++;// 先用再++ int z = ++x;// 先++再用 System.out.println(&quot;x:&quot; + x); System.out.println(&quot;y:&quot; + y); System.out.println(&quot;z:&quot; + z); &#125;&#125; 二、赋值运算符1234567891011public class Demo6 &#123; public static void main(String[] args) &#123; int a = 10; int b = 20; a += b; // 隐藏了一个强制转换 // 等同于 a = (int)(a+b); System.out.println(a); System.out.println(b); &#125;&#125; 三、关系运算符​ 关系运算符的结果都为boolean类型，要么是true，要么是false 12345678910public class Demo7 &#123; public static void main(String[] args) &#123; int a = 10; int b = 10; int c = 20; System.out.println(a == b); System.out.println(a == c); &#125;&#125; 练习：约会12345678910111213141516import java.util.Scanner;public class Demo8 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入衣服的时髦度&quot;); int myFashion = sc.nextInt(); //myFashion 为自己衣服的时髦程度 System.out.println(&quot;请输入对方的衣服时髦度&quot;); int girlFashion = sc.nextInt(); //girlFashion 为对方的时髦程度 boolean result = myFashion &gt; girlFashion; System.out.println(result); &#125;&#125; 四、逻辑运算符1234567891011121314151617181920212223public class Demo9 &#123; public static void main(String[] args) &#123; // &amp; 并且 System.out.println(true &amp; true); System.out.println(false &amp; false); System.out.println(true &amp; false); System.out.println(false &amp; true); // | 或者 System.out.println(true | true); System.out.println(true | false); System.out.println(false | false); System.out.println(false | true); // ^ 异或 System.out.println(true ^ true); System.out.println(false ^ true); System.out.println(false ^ false); System.out.println(false ^ true); // ! 非 System.out.println(!false); System.out.println(!true); &#125;&#125; 五、短路逻辑运算符（效率更高）1234567891011121314public class Demo10 &#123; public static void main(String[] args) &#123; // &amp;&amp;短路与 System.out.println(true &amp;&amp; true); System.out.println(false &amp;&amp; false); System.out.println(true &amp;&amp; false); System.out.println(false &amp;&amp; true); // ||短路或 System.out.println(true || true); System.out.println(false || false); System.out.println(true || false); System.out.println(false || true); &#125;&#125; ​ 当左边的表达式已经可以确定结果，右边就不会运行了 练习123456789101112public class Demo11 &#123; public static void main(String[] args) &#123; int a = 10; int b = 10; boolean result = ++a &lt; 5 &amp;&amp; ++b &lt; 5; // ++a &lt; 5 已经短路了，后面++b，不会运行 System.out.println(result); System.out.println(a);// 11 System.out.println(b);// 10 &#125;&#125; 注：&amp;|无论左边是true还是false，右边都要执行 ​ &amp;&amp;：左边为false，右边无论真假，整个表达式一定是false ​ ||：左边为true，右边无论真假，整个表达式一定是true 练习：数字61234567891011121314import java.util.Scanner;public class Demo12 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入第一个整数&quot;); int number1 = sc.nextInt(); System.out.println(&quot;请输入第二个整数&quot;); int number2 = sc.nextInt(); boolean result = number1 == 6 || number2 == 6 || (number1 + number2) % 6 == 0; System.out.println(result); &#125;&#125;","categories":[],"tags":[]},{"title":"JAVAEE基础——CMD，JDK，关键字，字面量，特殊字符，变量","slug":"JAVASE01","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-02T09:07:46.397Z","comments":true,"path":"2023/01/02/JAVASE01/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE01/","excerpt":"","text":"一、常用CMD命令 盘符切换：盘符名称+冒号 E: 查看当前路径下的内容 dir 进入单集目录 ： cd 目录 退回上一级目录 ： cd.. 进入多集目录 cd 目录1\\目录2 回退到盘符目录 cd\\ 清屏 cls 退出命令提示符窗口 exit 二、JDK和JRE1、JDK：Java开发工具包​ JVM，核心类库，开发工具 2、JRE：JAVA运行环境​ JVM，核心类库，运行工具 3、JVM：Java虚拟机​ JAVA程序真正运行的地方 4、JDK包含JRE，JRE包含JVM三、关键字：被JAVA赋予特殊意义的单词1、关键字字母全部小写2、IDE中一般对于关键字有特殊标注（高亮显示）四、关键字class​ class：用于定义创建一个类，类是JAVA最基本的组成单元 1234/*定义一个名叫HelloWorld的类*/public class HelloWorld&#123; &#125; 五、字面量1、整数类型（不带小数点的数字）​ 666，-88 2、小数类型（带小数点的数字）​ 13.14，-5.21 3、字符串类型（双引号括起来的内容）​ “HelloWorld” 4、字符类型（单引号引起来的内容，内容只能有一个）​ ‘A’ , ‘0’ 5、布尔类型（布尔值，只有两个值 true或者 false）6、空类型（一个特殊的值，空值, 不能直接打印）​ 值是null 六、特殊字符1、\\t制表符（在打印的时候，把前面的字符串的长度补齐到8，或者8的整数倍。最少补1个空格，最多补8个空格）​ 作用：缩进、对齐、大空格 123456public class HelloWorld&#123; public static void main(String[] args)&#123; System.out.println(&quot;name&quot;+&#x27;\\t&#x27;+&quot;age&quot;); System.out.println(&quot;tom&quot;&#x27;\\t&#x27;+&quot;23&quot;); &#125;&#125; 七、变量1、变量的定义格式​ 数据类型 变量名 &#x3D; 数据值; ​ 数据类型：为空间中存储的数据，加入类型限制 ​ 变量名：为这个空间起个名字 ​ 数据值：存在空间里面的数值 123456public class ValueDemo&#123; public static void main(String[] args)&#123; int a = 10; System.out.println(a); &#125;&#125; 2、变量的使用方式1234567891011121314151617181920212223public class ValueDemo&#123; public static void main(String[] args)&#123; //1.基本用法：定义变量，再进行输出 int a = 10; System.out.println(a);//10 //2.变量参与计算 int b = 30; int c = 20; System.out.println(b+c);//50 //3.修改变量记录的值 a = 50; System.out.println(a);//50 //注意事项 //1.只能存一个值 //2.变量名不允许重复定义 //3.一条语句可以定义多个变量 int d = 100,e = 200,f = 300;//定义三个变量d，e，f System.out.println(d); System.out.println(e); System.out.println(f); //变量使用前必须要赋值 &#125;&#125; ## 3、变量使用方式练习(公交车上下乘客) 123456789101112131415161718public class ValueDemo&#123; public static void main(String[] args)&#123; //一开始没有乘客 int count = 0; //第一站：上了一位乘客（在原有的基础上+1） count = count + 1; //第二站：上了两位乘客，下了一位乘客 count = count + 2 - 1; //第三站：上了两位乘客，下了一位乘客 count = count + 2 - 1; //第四站：下了一位乘客 count = count - 1; //第五站：上去一位乘客 count = count + 1; // 输出到了终点车上一共有多少乘客 System.out.println(count); &#125;&#125;","categories":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/categories/JAVAEE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/tags/JAVAEE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVAEE基础——计算机的存储规则","slug":"JAVASE02","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-02T11:31:37.905Z","comments":true,"path":"2023/01/02/JAVASE02/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE02/","excerpt":"","text":"一、计算机的存储规则1、三类数据​ 文本、图片、声音 2、在计算机中一切数据都是以二进制的形式来存储的什么是二进制​ 十进制：0123456789 逢十进一，借一当十 ​ 二进制：01 逢二进一，借一当二 ​ 十进制中的0——–&gt;二进制中的0 ​ 十进制中的1——–&gt;二进制中的1 ​ 十进制中的2——–&gt;二进制中的10 ​ 十进制中的3——–&gt;二进制中的11 ​ 十进制中的4——–&gt;二进制中的100 3、Java中的进制规定（JDK7及以后的特性）​ 二进制代码中以0b开头 ​ 十进制代码不加任何前缀 ​ 八进制代码中以0开头 ​ 十六进制代码中以0x开头 4、计算机为什么使用二进制？​ （1）、技术实现简单：计算机是由逻辑电路组成，逻辑电路通常只有两个状态，开关的接通与断开，这两种状态正好可以用“1”和“0”表示。 ​ （2）、抗干扰能力强，可靠性高：二进制中只使用0和1两个数字，传输和处理时不易出错，因而可以保障计算机具有很高 的可靠性。 ​ （3）、运算规则简单：与十进制数相比，二进制数的运算规则要简单得多，这不仅可以使运算器的结构得到简化，而且有 利于提高运算速度。 ​ （4）、适合逻辑运算：逻辑代数是逻辑运算的理论依据，二进制只有两个数码，正好与逻辑代数中的“真”和“假”相吻合。 ​ （5）、易于进行转换：二进制数与十进制数之间的转换相当容易。人们使用计算机时可以仍然使用自己所习惯的十进制数， 而计算机将其自动转换成二进制数存储和处理，输出处理结果时又将二进制数自动转换成十进制数，这给工作带来极大的方便。 5、计算机中的文本数据存储（数字转二进制，字母和汉字查询码表）6、计算机中的图片数据存储（通过每个像素点中的RGB三原色来存储）​ 图片数据分为：黑白图，灰度图，彩色图 ​ 分辨率，像素，三原色 （1）黑白图（2）灰度图(3）彩色图片​ 计算机每个像素点都是由红绿蓝组成的，每个像素点将三原色设置为不同的值，从而产生不同的颜色，生产彩色图 总结​ 1.计算机中的颜色都是采用光学三原色 ​ 2.分别为：红绿蓝。也称为RGB。 ​ 3.可以写成十进制形式。（255，255，255） ​ 4.也可以写成十六进制形式（FFFFFF） 7、计算机中声音数据的存储（对声音波形进行采样再存储）下测采样点会尽可能去还原声音（红线），越密集越接近原本的声音","categories":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/categories/JAVAEE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/tags/JAVAEE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVAEE基础——基本数据类型，标识符，Scanner键盘录入","slug":"JAVASE03","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-02T11:32:35.786Z","comments":true,"path":"2023/01/02/JAVASE03/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE03/","excerpt":"","text":"一、基本数据类型 12345678910111213141516171819202122public class ValueDemo&#123; public static void main(String[] args)&#123; byte b = 10; System.out.println(b);//10 short s = 20; System.out.println(s);//20 int i = 30; System.out.println(i);//30 //定义long类型的变量，在数值后面需要加个L作为后缀 long n = 9999999L; System.out.println(n); //定义float类型的变量，在数值后面需要加个F作为后缀 float f = 10.1F; System.out.println(f);//10.1 double d = 20.2; System.out.println(d);//20.2 char c = &#x27;中&#x27; System.out.println(c);//中 boolean o = true; System.out.println(o);//true &#125;&#125; 练习：输出老师信息1234567891011121314public class ValueDemo&#123; public static void main(String[] args)&#123; String name = &quot;kzh&quot;; int age - 18; char gender = &#x27;男&#x27;; double height = 180.1; boolean flag = true; System.out.println(name); System.out.println(age); System.out.println(gender); System.out.println(height); System.out.println(flag); &#125;&#125; 二、标识符1、什么是标识符​ 标识符就是给类，方法，变量起的名字 2、起名规则（阿里巴巴编码规范）​ （1）有数字，字母，下划线和美元（$）组成 ​ （2）不能以数字开头 ​ （3）不能和关键字同名 ​ （4）区分大小写 3、命名规则（见名知意）​ （1）小驼峰：方法，变量 ​ name、firstName ​ （2）大驼峰：类名 ​ Student、GoodStudent 三、键盘录入（Scanner类）​ 步骤1：导包 1import java.util.Scanner; ​ 步骤2：创建对象 1Scanner sc = new Scanner(System.in); ​ 步骤3：接受数据 1int i = sc.nextInt(); 1、实际操作123456789import java.util.Scanner;public class ValueDemo&#123; public static void main(String[] args)&#123; System.out.println(&quot;请输入整数&quot;); Scanner sc = new Scanner(System.in); int i = sc.nextInt(); System.out.println(i); &#125;&#125;","categories":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/categories/JAVAEE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/tags/JAVAEE%E5%9F%BA%E7%A1%80/"}]},{"title":"JAVAEE基础——运算符，表达式，算数运算符，数据类型的转换，“+”运算的三种操作","slug":"JAVASE04","date":"2023-01-02T03:40:48.000Z","updated":"2023-01-02T11:34:20.701Z","comments":true,"path":"2023/01/02/JAVASE04/","link":"","permalink":"http://kangzihang1109.github.io/2023/01/02/JAVASE04/","excerpt":"","text":"一、运算符​ 对字面量或变量进行操作的符号 二、表达式​ 用运算符把字面量或者变量连接起来，符合Java语法的式子就可以叫做表达式（如：a+b，a+b是表达式，+是运算符） 三、算数运算符​ +，-，*，&#x2F;，%，加减乘除和取余 代码练习（+，-，*）123456789101112131415public class Demo1 &#123; public static void main(String[] args) &#123; System.out.println(3 + 2); System.out.println(5 - 1); System.out.println(7 * 9); // 如果计算的时候有小数参与 // 结论：在代码中有小数参与计算，结果有可能不精确 System.out.println(1.1 + 1.1); System.out.println(1.1 + 1.01); System.out.println(1.1 - 1.01); System.out.println(1.1 * 1.01); &#125;&#125; 结果代码练习（&#x2F;,%）1234567891011121314public class Demo2 &#123; public static void main(String[] args) &#123; //整数参与计算，结果只能是整数 //小数参与计算，结果可能是不精确的 //除法 System.out.println(10 / 2); System.out.println(10 / 3); System.out.println(10.0 / 3); //取模：取余 System.out.println(10 % 2); System.out.println(10 % 3); &#125;&#125; 结果练习：数值拆分​ 键盘录入三位数，拆分它的个位，十位和百位 123456789101112131415import java.util.Scanner;public class Demo3 &#123; public static void main(String[] args) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入整数&quot;); int number = sc.nextInt(); int x = number / 100 ; int y = number / 10 % 10 ; int z = number % 10 ; System.out.println(x); System.out.println(y); System.out.println(z); &#125;&#125; 结果四、数据类型的转换隐式转换（自动类型提升 byte&lt;short&lt;int&lt;long&lt;float&lt;double）​ 1、把取值范围小的数据，转换为取值范围大的数据（精度更高），然后再进行计算 ​ 2、byte，short，char，三种类型数据，会先提升为int，再进行运算 隐式转换练习强制转换​ 当把范围大的值，赋值给范围小的变量的时候，不允许直接赋值，需要加入强制转换 12int a = 300;byte b = (byte) a; 练习12345678910public class Demo4 &#123; public static void main(String[] args) &#123; byte b1 = 100; byte b2 = 100; //(byte)b1+b2;强转的是b1，错误 byte result = (byte) (b1 + b2); System.out.println(result);//结果不是200，因为转换的数据过大 &#125;&#125; 结果五、“+”三种操作1、数值相加2、字符串相加​ （1）、当“+”操作中出现字符串时候，这个+是字符串的连接符，而不是算数运算符了。会将前后的数据进行拼接，并产生一个新的字符串 ​ “123”+123——–&gt;”123123” ​ （2）、连续+操作时候，从左到右逐个执行 ​ 1+99+“123”———-&gt;100123 ​ 1+2+”abc”+2+1———-&gt;3abc21 3、字符相加​ byte，short，char类型的数据在运算的时候，会先升为int，然后再进行计算，通过ASCII表查询到对应的数字进行相加","categories":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/categories/JAVAEE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/tags/JAVAEE%E5%9F%BA%E7%A1%80/"}]}],"categories":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/categories/JAVAEE%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"JAVAEE基础","slug":"JAVAEE基础","permalink":"http://kangzihang1109.github.io/tags/JAVAEE%E5%9F%BA%E7%A1%80/"}]}